# This should work on Kubernetes deployments that have LoadBalancer support
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: yelb-ui
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: yelb-ui
        tier: frontend
        secgroup: web-tier
      annotations:
        prometheus.io/scrape: 'true'
    spec:
      containers:
      - name: yelb-ui
        image: harbor.syspks.com/yelb-demo/yelb-ui:0.5
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "32Mi"
            cpu: "1m"
          limits:
            memory: "256Mi"
            cpu: "100m"
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: redis-server
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: redis-server
        tier: cache
        secgroup: cache-tier
    spec:
      containers:
      - name: redis-server
        image: harbor.syspks.com/yelb-demo/redis:4.0.2
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-data
          mountPath: /data
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-claim
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: yelb-db
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: yelb-db
        tier: backenddb
        secgroup: db-tier
    spec:
      containers:
      - name: yelb-db
        image:  harbor.syspks.com/yelb-demo/yelb-db:0.5
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
          subPath: postgresql
      volumes:
      - name: postgresql-data
        persistentVolumeClaim:
          claimName: postgresql-claim

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: yelb-appserver
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: yelb-appserver
        tier: middletier
        secgroup: app-tier
    spec:
      containers:
      - name: yelb-appserver
        image:  harbor.syspks.com/yelb-demo/yelb-appserver:0.5
        ports:
        - containerPort: 4567
